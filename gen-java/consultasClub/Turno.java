/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package consultasClub;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class Turno implements org.apache.thrift.TBase<Turno, Turno._Fields>, java.io.Serializable, Cloneable, Comparable<Turno> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Turno");

  private static final org.apache.thrift.protocol.TField IDTURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("idturno", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField IDFILIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("idfilial", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField IDCANCHA_FIELD_DESC = new org.apache.thrift.protocol.TField("idcancha", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField IDSOCIO_FIELD_DESC = new org.apache.thrift.protocol.TField("idsocio", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField FECHAHORA_FIELD_DESC = new org.apache.thrift.protocol.TField("fechahora", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ESTADO_FIELD_DESC = new org.apache.thrift.protocol.TField("estado", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TurnoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TurnoTupleSchemeFactory();

  public int idturno; // required
  public int idfilial; // required
  public int idcancha; // required
  public int idsocio; // required
  public java.lang.String fechahora; // required
  public java.lang.String estado; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    IDTURNO((short)1, "idturno"),
    IDFILIAL((short)2, "idfilial"),
    IDCANCHA((short)3, "idcancha"),
    IDSOCIO((short)4, "idsocio"),
    FECHAHORA((short)5, "fechahora"),
    ESTADO((short)6, "estado");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // IDTURNO
          return IDTURNO;
        case 2: // IDFILIAL
          return IDFILIAL;
        case 3: // IDCANCHA
          return IDCANCHA;
        case 4: // IDSOCIO
          return IDSOCIO;
        case 5: // FECHAHORA
          return FECHAHORA;
        case 6: // ESTADO
          return ESTADO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDTURNO_ISSET_ID = 0;
  private static final int __IDFILIAL_ISSET_ID = 1;
  private static final int __IDCANCHA_ISSET_ID = 2;
  private static final int __IDSOCIO_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.IDTURNO, new org.apache.thrift.meta_data.FieldMetaData("idturno", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IDFILIAL, new org.apache.thrift.meta_data.FieldMetaData("idfilial", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IDCANCHA, new org.apache.thrift.meta_data.FieldMetaData("idcancha", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IDSOCIO, new org.apache.thrift.meta_data.FieldMetaData("idsocio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FECHAHORA, new org.apache.thrift.meta_data.FieldMetaData("fechahora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESTADO, new org.apache.thrift.meta_data.FieldMetaData("estado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Turno.class, metaDataMap);
  }

  public Turno() {
  }

  public Turno(
    int idturno,
    int idfilial,
    int idcancha,
    int idsocio,
    java.lang.String fechahora,
    java.lang.String estado)
  {
    this();
    this.idturno = idturno;
    setIdturnoIsSet(true);
    this.idfilial = idfilial;
    setIdfilialIsSet(true);
    this.idcancha = idcancha;
    setIdcanchaIsSet(true);
    this.idsocio = idsocio;
    setIdsocioIsSet(true);
    this.fechahora = fechahora;
    this.estado = estado;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Turno(Turno other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idturno = other.idturno;
    this.idfilial = other.idfilial;
    this.idcancha = other.idcancha;
    this.idsocio = other.idsocio;
    if (other.isSetFechahora()) {
      this.fechahora = other.fechahora;
    }
    if (other.isSetEstado()) {
      this.estado = other.estado;
    }
  }

  public Turno deepCopy() {
    return new Turno(this);
  }

  @Override
  public void clear() {
    setIdturnoIsSet(false);
    this.idturno = 0;
    setIdfilialIsSet(false);
    this.idfilial = 0;
    setIdcanchaIsSet(false);
    this.idcancha = 0;
    setIdsocioIsSet(false);
    this.idsocio = 0;
    this.fechahora = null;
    this.estado = null;
  }

  public int getIdturno() {
    return this.idturno;
  }

  public Turno setIdturno(int idturno) {
    this.idturno = idturno;
    setIdturnoIsSet(true);
    return this;
  }

  public void unsetIdturno() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDTURNO_ISSET_ID);
  }

  /** Returns true if field idturno is set (has been assigned a value) and false otherwise */
  public boolean isSetIdturno() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDTURNO_ISSET_ID);
  }

  public void setIdturnoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDTURNO_ISSET_ID, value);
  }

  public int getIdfilial() {
    return this.idfilial;
  }

  public Turno setIdfilial(int idfilial) {
    this.idfilial = idfilial;
    setIdfilialIsSet(true);
    return this;
  }

  public void unsetIdfilial() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
  }

  /** Returns true if field idfilial is set (has been assigned a value) and false otherwise */
  public boolean isSetIdfilial() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
  }

  public void setIdfilialIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFILIAL_ISSET_ID, value);
  }

  public int getIdcancha() {
    return this.idcancha;
  }

  public Turno setIdcancha(int idcancha) {
    this.idcancha = idcancha;
    setIdcanchaIsSet(true);
    return this;
  }

  public void unsetIdcancha() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCANCHA_ISSET_ID);
  }

  /** Returns true if field idcancha is set (has been assigned a value) and false otherwise */
  public boolean isSetIdcancha() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCANCHA_ISSET_ID);
  }

  public void setIdcanchaIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCANCHA_ISSET_ID, value);
  }

  public int getIdsocio() {
    return this.idsocio;
  }

  public Turno setIdsocio(int idsocio) {
    this.idsocio = idsocio;
    setIdsocioIsSet(true);
    return this;
  }

  public void unsetIdsocio() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDSOCIO_ISSET_ID);
  }

  /** Returns true if field idsocio is set (has been assigned a value) and false otherwise */
  public boolean isSetIdsocio() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDSOCIO_ISSET_ID);
  }

  public void setIdsocioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDSOCIO_ISSET_ID, value);
  }

  public java.lang.String getFechahora() {
    return this.fechahora;
  }

  public Turno setFechahora(java.lang.String fechahora) {
    this.fechahora = fechahora;
    return this;
  }

  public void unsetFechahora() {
    this.fechahora = null;
  }

  /** Returns true if field fechahora is set (has been assigned a value) and false otherwise */
  public boolean isSetFechahora() {
    return this.fechahora != null;
  }

  public void setFechahoraIsSet(boolean value) {
    if (!value) {
      this.fechahora = null;
    }
  }

  public java.lang.String getEstado() {
    return this.estado;
  }

  public Turno setEstado(java.lang.String estado) {
    this.estado = estado;
    return this;
  }

  public void unsetEstado() {
    this.estado = null;
  }

  /** Returns true if field estado is set (has been assigned a value) and false otherwise */
  public boolean isSetEstado() {
    return this.estado != null;
  }

  public void setEstadoIsSet(boolean value) {
    if (!value) {
      this.estado = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case IDTURNO:
      if (value == null) {
        unsetIdturno();
      } else {
        setIdturno((java.lang.Integer)value);
      }
      break;

    case IDFILIAL:
      if (value == null) {
        unsetIdfilial();
      } else {
        setIdfilial((java.lang.Integer)value);
      }
      break;

    case IDCANCHA:
      if (value == null) {
        unsetIdcancha();
      } else {
        setIdcancha((java.lang.Integer)value);
      }
      break;

    case IDSOCIO:
      if (value == null) {
        unsetIdsocio();
      } else {
        setIdsocio((java.lang.Integer)value);
      }
      break;

    case FECHAHORA:
      if (value == null) {
        unsetFechahora();
      } else {
        setFechahora((java.lang.String)value);
      }
      break;

    case ESTADO:
      if (value == null) {
        unsetEstado();
      } else {
        setEstado((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case IDTURNO:
      return getIdturno();

    case IDFILIAL:
      return getIdfilial();

    case IDCANCHA:
      return getIdcancha();

    case IDSOCIO:
      return getIdsocio();

    case FECHAHORA:
      return getFechahora();

    case ESTADO:
      return getEstado();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case IDTURNO:
      return isSetIdturno();
    case IDFILIAL:
      return isSetIdfilial();
    case IDCANCHA:
      return isSetIdcancha();
    case IDSOCIO:
      return isSetIdsocio();
    case FECHAHORA:
      return isSetFechahora();
    case ESTADO:
      return isSetEstado();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Turno)
      return this.equals((Turno)that);
    return false;
  }

  public boolean equals(Turno that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idturno = true;
    boolean that_present_idturno = true;
    if (this_present_idturno || that_present_idturno) {
      if (!(this_present_idturno && that_present_idturno))
        return false;
      if (this.idturno != that.idturno)
        return false;
    }

    boolean this_present_idfilial = true;
    boolean that_present_idfilial = true;
    if (this_present_idfilial || that_present_idfilial) {
      if (!(this_present_idfilial && that_present_idfilial))
        return false;
      if (this.idfilial != that.idfilial)
        return false;
    }

    boolean this_present_idcancha = true;
    boolean that_present_idcancha = true;
    if (this_present_idcancha || that_present_idcancha) {
      if (!(this_present_idcancha && that_present_idcancha))
        return false;
      if (this.idcancha != that.idcancha)
        return false;
    }

    boolean this_present_idsocio = true;
    boolean that_present_idsocio = true;
    if (this_present_idsocio || that_present_idsocio) {
      if (!(this_present_idsocio && that_present_idsocio))
        return false;
      if (this.idsocio != that.idsocio)
        return false;
    }

    boolean this_present_fechahora = true && this.isSetFechahora();
    boolean that_present_fechahora = true && that.isSetFechahora();
    if (this_present_fechahora || that_present_fechahora) {
      if (!(this_present_fechahora && that_present_fechahora))
        return false;
      if (!this.fechahora.equals(that.fechahora))
        return false;
    }

    boolean this_present_estado = true && this.isSetEstado();
    boolean that_present_estado = true && that.isSetEstado();
    if (this_present_estado || that_present_estado) {
      if (!(this_present_estado && that_present_estado))
        return false;
      if (!this.estado.equals(that.estado))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idturno;

    hashCode = hashCode * 8191 + idfilial;

    hashCode = hashCode * 8191 + idcancha;

    hashCode = hashCode * 8191 + idsocio;

    hashCode = hashCode * 8191 + ((isSetFechahora()) ? 131071 : 524287);
    if (isSetFechahora())
      hashCode = hashCode * 8191 + fechahora.hashCode();

    hashCode = hashCode * 8191 + ((isSetEstado()) ? 131071 : 524287);
    if (isSetEstado())
      hashCode = hashCode * 8191 + estado.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Turno other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdturno()).compareTo(other.isSetIdturno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdturno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idturno, other.idturno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdfilial()).compareTo(other.isSetIdfilial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdfilial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idfilial, other.idfilial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdcancha()).compareTo(other.isSetIdcancha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdcancha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idcancha, other.idcancha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdsocio()).compareTo(other.isSetIdsocio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdsocio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idsocio, other.idsocio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechahora()).compareTo(other.isSetFechahora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechahora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechahora, other.fechahora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEstado()).compareTo(other.isSetEstado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estado, other.estado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Turno(");
    boolean first = true;

    sb.append("idturno:");
    sb.append(this.idturno);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idfilial:");
    sb.append(this.idfilial);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idcancha:");
    sb.append(this.idcancha);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idsocio:");
    sb.append(this.idsocio);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechahora:");
    if (this.fechahora == null) {
      sb.append("null");
    } else {
      sb.append(this.fechahora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("estado:");
    if (this.estado == null) {
      sb.append("null");
    } else {
      sb.append(this.estado);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TurnoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TurnoStandardScheme getScheme() {
      return new TurnoStandardScheme();
    }
  }

  private static class TurnoStandardScheme extends org.apache.thrift.scheme.StandardScheme<Turno> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Turno struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // IDTURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idturno = iprot.readI32();
              struct.setIdturnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // IDFILIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idfilial = iprot.readI32();
              struct.setIdfilialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IDCANCHA
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idcancha = iprot.readI32();
              struct.setIdcanchaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IDSOCIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idsocio = iprot.readI32();
              struct.setIdsocioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FECHAHORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechahora = iprot.readString();
              struct.setFechahoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ESTADO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.estado = iprot.readString();
              struct.setEstadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Turno struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(IDTURNO_FIELD_DESC);
      oprot.writeI32(struct.idturno);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IDFILIAL_FIELD_DESC);
      oprot.writeI32(struct.idfilial);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IDCANCHA_FIELD_DESC);
      oprot.writeI32(struct.idcancha);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IDSOCIO_FIELD_DESC);
      oprot.writeI32(struct.idsocio);
      oprot.writeFieldEnd();
      if (struct.fechahora != null) {
        oprot.writeFieldBegin(FECHAHORA_FIELD_DESC);
        oprot.writeString(struct.fechahora);
        oprot.writeFieldEnd();
      }
      if (struct.estado != null) {
        oprot.writeFieldBegin(ESTADO_FIELD_DESC);
        oprot.writeString(struct.estado);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TurnoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TurnoTupleScheme getScheme() {
      return new TurnoTupleScheme();
    }
  }

  private static class TurnoTupleScheme extends org.apache.thrift.scheme.TupleScheme<Turno> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Turno struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdturno()) {
        optionals.set(0);
      }
      if (struct.isSetIdfilial()) {
        optionals.set(1);
      }
      if (struct.isSetIdcancha()) {
        optionals.set(2);
      }
      if (struct.isSetIdsocio()) {
        optionals.set(3);
      }
      if (struct.isSetFechahora()) {
        optionals.set(4);
      }
      if (struct.isSetEstado()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetIdturno()) {
        oprot.writeI32(struct.idturno);
      }
      if (struct.isSetIdfilial()) {
        oprot.writeI32(struct.idfilial);
      }
      if (struct.isSetIdcancha()) {
        oprot.writeI32(struct.idcancha);
      }
      if (struct.isSetIdsocio()) {
        oprot.writeI32(struct.idsocio);
      }
      if (struct.isSetFechahora()) {
        oprot.writeString(struct.fechahora);
      }
      if (struct.isSetEstado()) {
        oprot.writeString(struct.estado);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Turno struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.idturno = iprot.readI32();
        struct.setIdturnoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.idfilial = iprot.readI32();
        struct.setIdfilialIsSet(true);
      }
      if (incoming.get(2)) {
        struct.idcancha = iprot.readI32();
        struct.setIdcanchaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.idsocio = iprot.readI32();
        struct.setIdsocioIsSet(true);
      }
      if (incoming.get(4)) {
        struct.fechahora = iprot.readString();
        struct.setFechahoraIsSet(true);
      }
      if (incoming.get(5)) {
        struct.estado = iprot.readString();
        struct.setEstadoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

